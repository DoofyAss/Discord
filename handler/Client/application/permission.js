


$(application)



.add(function permission(data, member) {



	// Permission

	let permissions = Permission.filter((key, value) =>
	key & data.permission && ({

		have: key & parseInt(member.permissions.bitfield),
		name: value
	}))



	// Access

	let dataAccess = array => array.map(id => ({

		have: member._roles.includes(id) || member.id == id,
		data: client.guild.roles.cache.get(id) ? `<@&${id}>` : `<@${id}>`
	}))

	let allow = dataAccess(data.allow)
	let disallow = dataAccess(data.disallow)



	// Permit

	let permit = [

		permissions.map(e => e.have).every(Boolean),
		allow.empty ? true : allow.map(e => e.have).some(Boolean)
	]

	let deny = disallow.map(e => e.have).some(Boolean) || ! permit.every(Boolean)



	// list

	let list = {

		info: [],

		allow: allow.map(e => e.data).join(' '),
		disallow: disallow.map(e => e.data).join(' '),
		permission: permissions.map(e => `${ e.have ? 'üó∏' : '‚úó' } \u200b ${ e.name }`).join('\n')
	}

	list.allow && list.info.push(`–†–∞–∑—Ä–µ—à–µ–Ω–æ: ${ list.allow }`)
	list.disallow && list.info.push(`–ó–∞–ø—Ä–µ—â–µ–Ω–æ: ${ list.disallow }`)

	list.info = [ list.info.join('\n'), list.permission ].join('\n\n')

	return deny ? list.info.trim() : false
})










const Permission = {

	[2 ** 0]:	'–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è', // 0x1
	[2 ** 1]:	'–í—ã–≥–æ–Ω—è—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤', // 0x2
	[2 ** 2]:	'–ë–∞–Ω–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤', // 0x4
	[2 ** 3]:	'–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä', // 0x8

	[2 ** 4]:	'–£–ø—Ä–∞–≤–ª—è—Ç—å –∫–∞–Ω–∞–ª–∞–º–∏', // 0x10
	[2 ** 5]:	'–£–ø—Ä–∞–≤–ª—è—Ç—å —Å–µ—Ä–≤–µ—Ä–æ–º', // 0x20
	[2 ** 6]:	'–î–æ–±–∞–≤–ª—è—Ç—å —Ä–µ–∞–∫—Ü–∏–∏', // 0x40
	[2 ** 7]:	'–ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∂—É—Ä–Ω–∞–ª –∞—É–¥–∏—Ç–∞', // 0x80

	[2 ** 8]:	'–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–π —Ä–µ–∂–∏–º', // 0x100
	[2 ** 9]:	'–í–∏–¥–µ–æ', // 0x200
	[2 ** 10]:	'–ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∫–∞–Ω–∞–ª—ã', // 0x400
	[2 ** 11]:	'–û—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è', // 0x800

	[2 ** 12]:	'–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π text-to-speech', // 0x1000
	[2 ** 13]:	'–£–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏', // 0x2000
	[2 ** 14]:	'–í—Å—Ç—Ä–∞–∏–≤–∞—Ç—å —Å—Å—ã–ª–∫–∏', // 0x4000
	[2 ** 15]:	'–ü—Ä–∏–∫—Ä–µ–ø–ª—è—Ç—å —Ñ–∞–π–ª—ã', // 0x8000

	[2 ** 16]:	'–ß–∏—Ç–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π', // 0x10000
	[2 ** 17]:	'–£–ø–æ–º–∏–Ω–∞–Ω–∏–µ —Ä–æ–ª–µ–π', // 0x20000
	[2 ** 18]:	'–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–Ω–µ—à–Ω–∏–µ —ç–º–æ–¥–∑–∏', // 0x40000
	[2 ** 19]:	'–ü—Ä–æ—Å–º–æ—Ç—Ä –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞', // 0x80000

	[2 ** 20]:	'–ü–æ–¥–∫–ª—é—á–∞—Ç—å—Å—è', // 0x100000
	[2 ** 21]:	'–ì–æ–≤–æ—Ä–∏—Ç—å', // 0x200000
	[2 ** 22]:	'–û—Ç–∫–ª—é—á–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –º–∏–∫—Ä–æ—Ñ–æ–Ω', // 0x400000
	[2 ** 23]:	'–û—Ç–∫–ª—é—á–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –∑–≤—É–∫', // 0x800000

	[2 ** 24]:	'–ü–µ—Ä–µ–º–µ—â–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤', // 0x1000000
	[2 ** 25]:	'–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–µ–∂–∏–º –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –ø–æ –≥–æ–ª–æ—Å—É', // 0x2000000
	[2 ** 26]:	'–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º', // 0x4000000
	[2 ** 27]:	'–£–ø—Ä–∞–≤–ª—è—Ç—å –Ω–∏–∫–Ω–µ–π–º–∞–º–∏', // 0x8000000

	[2 ** 28]:	'–£–ø—Ä–∞–≤–ª—è—Ç—å —Ä–æ–ª—è–º–∏', // 0x10000000
	[2 ** 29]:	'–£–ø—Ä–∞–≤–ª—è—Ç—å –≤–µ–±—Ö—É–∫–∞–º–∏ (webhooks)', // 0x20000000
	[2 ** 30]:	'–£–ø—Ä–∞–≤–ª—è—Ç—å —ç–º–æ–¥–∑–∏ –∏ —Å—Ç–∏–∫–µ—Ä–∞–º–∏', // 0x40000000
	[2 ** 31]:	'–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è', // 0x80000000

	[2 ** 32]:	'–ü–æ–ø—Ä–æ—Å–∏—Ç—å –≤—ã—Å—Ç—É–ø–∏—Ç—å', // 0x100000000
	[2 ** 33]:	'–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è–º–∏', // 0x200000000
	[2 ** 34]:	'–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ç–∫–∞–º–∏', // 0x400000000
	[2 ** 35]:	'–°–æ–∑–¥–∞—Ç—å –ø—É–±–ª–∏—á–Ω—ã–µ –≤–µ—Ç–∫–∏', // 0x800000000

	[2 ** 36]:	'–°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –≤–µ—Ç–æ–∫', // 0x1000000000
	[2 ** 37]:	'–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤–Ω–µ—à–Ω–∏–µ —Å—Ç–∏–∫–µ—Ä—ã', // 0x2000000000
	[2 ** 38]:	'–û—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≤–µ—Ç–∫–∞—Ö', // 0x4000000000
	[2 ** 39]:	'–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏', // 0x8000000000

	[2 ** 40]:	'–í—ã–¥–∞—Ç—å —Ç–∞–π–º-–∞—É—Ç' // 0x10000000000
}
